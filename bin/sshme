#!/usr/bin/env bash

_get_input() {
    count=0
    if [[ "${delete_flag:-0}" -eq 0 ]]; then
        read -rp "[$((++count))]. Enter SSH name: [alias name] " read_ssh_name
        read -rp "[$((++count))]. Enter SSH IP: [ip|dns|user@ip:port] " read_ssh_host
        ssh_host=${read_ssh_host:? "Please enter ssh host."}
        if echo "$read_ssh_host" | grep -q ".*@.*"; then
            ssh_user=${read_ssh_host%%@*}
            var_temp=${read_ssh_host#*@}
            ssh_host=${var_temp%%:*}
            if echo "$read_ssh_host" | grep -q ".*@.*:"; then
                ssh_port=${read_ssh_host##*:}
            else
                ssh_port=22
            fi
        else
            read -rp "[$((++count))]. Enter ssh user: [root] " read_ssh_user
            read -rp "[$((++count))]. Enter ssh port: [22] " read_ssh_port
            ssh_user=${read_ssh_user:-root}
            ssh_port=${read_ssh_port:-22}
        fi
        read -rp "[$((++count))]. Enable byobu? [Y/n] " read_byobu
    else
        ssh_host=$(awk '/^Host/ {print $2}' "${conf_files[@]}" | grep -v '\*' | fzf)
    fi

    if [[ "$conf_nums" -eq 1 ]]; then
        ssh_conf=${conf_files[0]}
    else
        select c in "${conf_files[@]}"; do
            ssh_conf="$(readlink -f "$c")"
            break
        done
    fi

    if [[ "$ansible_host_nums" -eq 1 ]]; then
        ansible_conf=${ansible_host_files[0]}
    else
        select a in "${ansible_host_files[@]}"; do
            ansible_conf="$(readlink -f "$a")"
            break
        done
    fi
}

_add_host() {
    if grep -q -E "^Host.*${read_ssh_name}$|^### ${read_ssh_name} begin" "$ssh_conf"; then
        echo "host ${read_ssh_name} exist, skip"
        return 1
    fi
    ## ssh config
    cat >>"$ssh_conf" <<EOF

### ${read_ssh_name} begin  ##$([[ "${read_byobu:-y}" == [yY] ]] && echo " byobu")
Host ${read_ssh_name}
    HostName ${ssh_host}
    User ${ssh_user}$([[ "${ssh_port}" == 22 ]] || echo -e "\n    Port ${ssh_port}")
### ${read_ssh_name} end

EOF
    ## ansible config
    [ -f "$ansible_conf" ] && echo "${read_ssh_name}" >>"$ansible_conf"
}

_delete_host() {
    sed -i "/^### ${ssh_host} begin/,/^### ${ssh_host} end/d" "$ssh_conf"
    [ -f "$ansible_conf" ] && sed -i "/^${ssh_host}$/d" "$ansible_conf"
}

_port_forward() {
    if command -v nc &>/dev/null; then
        echo >&2 "I require nc but it's not installed.  Aborting."
        return 1
    fi
    ssh_opt='ssh -qfg -o ExitOnForwardFailure=yes'
    ssh_host='ip.host.mysql.server'
    ssh_forward_port="${1:-3306}"
    ## create ssh tunnel
    $ssh_opt -L "$ssh_forward_port":localhost:3306 $ssh_host "sleep 300" || true
    ## kill ssh tunnel timeout
    while nc -vz localhost "$ssh_forward_port"; do
        # echo "ssh forward port $ssh_forward_port exist."
        count=$((count + 1))
        if [ $count -gt 30 ]; then
            echo "ssh forward port $ssh_forward_port exist too long, break."
            pkill -f "$ssh_opt -L $ssh_forward_port:localhost:3306" || true
            break
        fi
        sleep 10
    done &
}

main() {
    # set -xe
    # LANG="en_US.UTF-8"
    # LC_COLLATE="en_US.UTF-8"
    # LC_CTYPE="en_US.UTF-8"
    # LC_MESSAGES="en_US.UTF-8"
    # LC_MONETARY="en_US.UTF-8"
    # LC_NUMERIC="en_US.UTF-8"
    # LC_TIME="en_US.UTF-8"

    if [ "$1" = port ]; then
        shift
        _port_forward "$@"
        return
    fi

    conf_files=("$HOME"/.ssh/config*)
    conf_nums=${#conf_files[@]}
    ansible_host_files=("$HOME"/src/*devops*/ansible/hosts)
    ansible_host_nums=${#ansible_host_files[@]}

    if command -v fzf >/dev/null; then
        host=$(echo -e "add\nupdate\ndelete\n$(awk '/^Host/ {print $2}' "${conf_files[@]}" | grep -v '\*')" | fzf)
    else
        select h in add update delete $(awk '/^Host/ {print $2}' "${conf_files[@]}" | grep -v '\*'); do
            host=$h
            break
        done
    fi

    case "${host:-quit}" in
    'quit')
        return
        ;;
    'add')
        _get_input
        _add_host
        ;;
    'update')
        _get_input
        _delete_host
        _add_host
        ;;
    'delete')
        delete_flag=1
        _get_input
        _delete_host
        ;;
    *)
        if grep -B2 -E "Host\s+${host}$" "${conf_files[@]}" | grep -q 'byobu'; then
            if uname -a | grep -i -q 'iphone.*ish'; then
                unset use_byobu
            else
                use_byobu='byobu'
            fi
        fi
        ## get username from $1
        if [ -n "${1}" ]; then
            host="${1}@${host}"
        fi
        # shellcheck disable=2086
        $(command -v ssh || command -v tssh) -A -t "${host}" ${use_byobu}
        ;;
    esac
}

main "$@"
