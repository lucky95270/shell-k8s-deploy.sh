# 使用多阶段构建
ARG MIRROR=
ARG NGINX_VERSION=stable-alpine
ARG IN_CHINA=false
ARG CHANGE_SOURCE=false
ARG INSTALL_NGINX=true
ARG BUILD_URL=https://gitee.com/xiagw/deploy.sh/raw/main/conf/dockerfile/root/opt/build.sh
ARG TZ=UTC

FROM ${MIRROR}nginx:${NGINX_VERSION} AS builder

RUN --mount=type=cache,target=/var/cache/apk,sharing=locked \
    --mount=type=bind,target=/src,rw \
    set -xe; \
    BUILD_SH=/src/root/opt/build.sh; \
    [ -f $BUILD_SH ] || BUILD_SH=build.sh; \
    [ -f $BUILD_SH ] || curl -fL "$BUILD_URL" -o $BUILD_SH; \
    [ -f $BUILD_SH ] && bash $BUILD_SH geo


# 最终镜像
FROM ${MIRROR}nginx:${NGINX_VERSION}

LABEL MAINTAINER="xiagw <fxiaxiaoyu@gmail.com>"

ENV TZ=${TZ}

EXPOSE 80 443
VOLUME ["/app"]
WORKDIR /app
RUN --mount=type=cache,target=/var/cache/apk,sharing=locked \
    --mount=type=bind,target=/src,rw \
    set -xe; \
    BUILD_SH=/src/root/opt/build.sh; \
    [ -f $BUILD_SH ] || BUILD_SH=build.sh; \
    [ -f $BUILD_SH ] || curl -fL "$BUILD_URL" -o $BUILD_SH; \
    [ -f $BUILD_SH ] && bash $BUILD_SH

COPY --from=builder /usr/sbin/nginx /usr/sbin/nginx

ONBUILD COPY ./root/ /
ONBUILD RUN if [ -f /opt/onbuild.sh ]; then sh /opt/onbuild.sh; else :; fi