# shellcheck disable=SC2148,SC2034
################################################################################
## 部署环境配置文件 / Deployment Environment Configuration
## 此文件包含密钥信息，仅供运维人员和管理人员使用
## This file contains sensitive information and is for ops/admin use only
################################################################################

#==============================================================================
# 基础环境设置 / Basic Environment Settings
#==============================================================================
## 是否在中国境内环境 / Whether in China mainland environment
ENV_IN_CHINA=false

#==============================================================================
# HTTP 代理配置 / HTTP Proxy Configuration
#==============================================================================
# ENV_HTTP_PROXY='http://192.168.10.10:1080'
# http_proxy='http://192.168.10.10:1080'
# https_proxy='http://192.168.10.10:1080'
# HTTP_PROXY='http://192.168.10.10:1080'
# HTTPS_PROXY='http://192.168.10.10:1080'

## 演示模式，用于测试和演示目的 / Demo mode for testing and demonstration
ENV_DEMO_MODE=false

#==============================================================================
# CI/CD 工具安装配置 / CI/CD Tools Installation
#==============================================================================
ENV_INSTALL_KUBECTL=false
ENV_INSTALL_HELM=false
ENV_INSTALL_TERRAFORM=false
ENV_INSTALL_AWS=false
ENV_INSTALL_ALIYUN=false
ENV_INSTALL_PYTHON_GITLAB=false
ENV_INSTALL_PYTHON_ELEMENT=false
ENV_INSTALL_JMETER=false
ENV_INSTALL_FLARECTL=false

## 文件注入配置 / File Injection Configuration
## 选项1. 不向目标仓库注入任何文件 [default]
ENV_INJECT=keep
## 选项2. 使用 ./data/projec_conf/, ./conf/ 内的相应文件覆盖到目标仓库，例如 Dockerfile 等
# ENV_INJECT=overwrite
## 选项3. 删除目标仓库的某些文件，例如 Dockerfile [不使用 docker build]
# ENV_INJECT=remove
## 选项4. 创建 docker-compose.yml [使用 docker-compose 发布]
# ENV_INJECT=create
## 针对某些分支执行某种选项
# if [[ "${G_REPO_BRANCH}" == release* ]]; then
#     ENV_INJECT=remove
# fi

## Kubernetes 相关 / Kubernetes Related
ENV_DISABLE_K8S=false
ENV_ENABLE_FUNC=false
ENV_HELM_VALUES_CNFS=cnfs-pvc-www
ENV_HELM_VALUES_MOUNT_PATH=/data
## 忽略部署检测的仓库名称列表 / List of repository names to ignore deployment check
ENV_IGNORE_DEPLOY_CHECK=(repo1 repo2 repo3)

#==============================================================================
# Docker 相关配置 / Docker Related Configuration
#==============================================================================
## Docker CLI 安装 / Docker CLI installation
ENV_INSTALL_DOCKER=true
ENV_INSTALL_PODMAN=false

## Docker Context 配置 / Docker Context Configuration
ENV_DOCKER_CONTEXT=local
ENV_DOCKER_CONTEXT_HOSTS=(ssh://user@192.168.1.1:22 ssh://user@192.168.1.2:22 ssh://user@192.168.1.3:22)

## Docker 构建配置 / Docker Build Configuration
ENV_ADD_HOST=(mvn.example.com:192.168.100.103 mirror.example.com:192.168.100.104)

## Docker 镜像仓库配置 / Docker Registry Configuration
ENV_DOCKER_LOGIN_TYPE=aliyun
ENV_DOCKER_REGISTRY='registry.cn-shenzhen.aliyuncs.com/ns/repo'
ENV_DOCKER_REGISTRY_BASE='registry.cn-shenzhen.aliyuncs.com/ns/base'
ENV_DOCKER_USERNAME=your_username
ENV_DOCKER_PASSWORD=your_password
ENV_DOCKER_MIRROR='registry.cn-hangzhou.aliyuncs.com/ns/repo'

## docker login to [aws]
# ENV_DOCKER_LOGIN_TYPE=aws
# ENV_REGION_ID='ap-east-1'
# ENV_DOCKER_REGISTRY='xxxxxxxxxxxx.dkr.ecr.ap-east-1.amazonaws.com/repo_east'
# ENV_NFS_SERVER='fs-xxxxxxxx.efs.ap-east-1.amazonaws.com'
# ENV_AWS_PROFILE=profile_east

## docker login to [qcloud]
# ENV_DOCKER_LOGIN_TYPE=qcloud
# ENV_DOCKER_REGISTRY='registry.cn-shenzhen.qcloud.com/ns/repo'
# ENV_DOCKER_USERNAME=your_username
# ENV_DOCKER_PASSWORD=your_password

#==============================================================================
# 代码质量与分析 / Code Quality and Analysis
#==============================================================================
## SonarQube 配置 / SonarQube Configuration
ENV_SONAR_URL='http://sonar.example.com:9000/'
ENV_SONAR_TOKEN='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'

#==============================================================================
# 部署相关配置 / Deployment Configuration
#==============================================================================
## Nginx 相关 / Nginx Related
ENV_NGINX_PROJECT_ID=(3 4)
ENV_NGINX_IPS=(192.168.101.101 192.168.101.102)
## rsync 目标服务器的目标目录前缀 / Target directory prefix on destination server
ENV_PATH_DEST_PRE="/var/www"
## helm release name 删除项目名称前缀 / Remove project name prefix
ENV_REMOVE_PROJ_PREFIX=false
## 阿里云命令行配置 / Aliyun CLI Configuration
ENV_ALIYUN_PROFILE=default

#==============================================================================
# 消息通知配置 / Notification Configuration
#==============================================================================
## 全局: 允许/禁止消息通知
ENV_DISABLE_NOTIFY=false
## 局部: 允许/禁止消息通知，根据 git 分支
ENV_DISABLE_NOTIFY_BRANCH="develop testing"

## 支持的通知方式配置示例 / Notification Method Examples
## 企业微信 / WeCom
# ENV_NOTIFY_TYPE=wecom
# ENV_WECOM_KEY=11111111111111

## Telegram
# ENV_NOTIFY_TYPE=telegram
# ENV_TG_API_KEY='xxxxxxxxx:xxxx_xxxxxxxxx-xxxxxxxxx_xxxx_xxxxx'
# ENV_TG_GROUP_ID='-xxxxxxxxx'

## Element
# ENV_NOTIFY_TYPE=element
# ENV_ELM_SERVER='https://matrix.example.com'
# ENV_ELM_USERID='@bot:example.com'
# ENV_ELM_PASSWORD='your_password'
# ENV_ELM_ROOMID='!xXxXxXxXxXxXxXxXxX:example.com'

## Email
# ENV_NOTIFY_TYPE=email
# ENV_EMAIL_FROM=xx@yy.zz
# ENV_EMAIL_TO=aa@bb.cc
# ENV_EMAIL_SERVER=smtp.163.com
# ENV_EMAIL_USERNAME=xx@yy.zz
# ENV_EMAIL_PASSWORD=xxPassWord

#==============================================================================
# 其他服务配置 / Other Service Configuration
#==============================================================================
